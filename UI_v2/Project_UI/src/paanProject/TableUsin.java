/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project_ui;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.border.LineBorder;

/**
 *
 * @author faynch
 */
public class TableUsin extends javax.swing.JFrame {
    
    static DefaultListModel TTModel = new DefaultListModel();
    Font font;
    static Color bgColor;
    static Color fgColor;
    String task = "";    

    /**
     * Creates new form usinTableForm
     */
    public TableUsin() {
        
        try {
            font = Font.createFont(Font.TRUETYPE_FONT, new File("Chewy-Regular.ttf")).deriveFont(20f);
            GraphicsEnvironment g = GraphicsEnvironment.getLocalGraphicsEnvironment();
            g.registerFont(Font.createFont(Font.TRUETYPE_FONT, new File("Chewy-Regular.ttf")));
        }
        catch(IOException | FontFormatException e){
            
        }  
        
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usinTTP = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TTlist = new javax.swing.JList<>();
        dayC = new javax.swing.JComboBox<>();
        dayL = new javax.swing.JLabel();
        startTL = new javax.swing.JLabel();
        startThourS = new javax.swing.JSpinner();
        startTminS = new javax.swing.JSpinner();
        endTL = new javax.swing.JLabel();
        endThourS = new javax.swing.JSpinner();
        endTminS = new javax.swing.JSpinner();
        sdot = new javax.swing.JLabel();
        edot = new javax.swing.JLabel();
        subjectL = new javax.swing.JLabel();
        subjectT = new javax.swing.JTextField();
        addB = new javax.swing.JButton();
        deleteB = new javax.swing.JButton();
        warning = new javax.swing.JTextField();
        okB = new javax.swing.JButton();
        tableL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 700, 470));
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(700, 470));
        setResizable(false);
        setSize(new java.awt.Dimension(700, 470));

        usinTTP.setBounds(new java.awt.Rectangle(0, 0, 700, 470));
        usinTTP.setMaximumSize(new java.awt.Dimension(700, 470));
        usinTTP.setMinimumSize(new java.awt.Dimension(700, 470));
        usinTTP.setPreferredSize(new java.awt.Dimension(700, 470));

        TTlist.setFont(font);
        TTlist.setModel(TTModel);
        TTlist.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(TTlist);

        dayC.setFont(font);
        dayC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Select Day-", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" }));

        dayL.setFont(font);
        dayL.setText("DAY :");

        startTL.setFont(font);
        startTL.setText("START TIME :");

        startThourS.setFont(font);
        startThourS.setModel(new javax.swing.SpinnerNumberModel(6, 6, 20, 1));

        startTminS.setFont(font);
        startTminS.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 15));

        endTL.setFont(font);
        endTL.setText("END TIME :");

        endThourS.setFont(font);
        endThourS.setModel(new javax.swing.SpinnerNumberModel(6, 6, 20, 1));

        endTminS.setFont(font);
        endTminS.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 15));

        sdot.setFont(font);
        sdot.setText(":");

        edot.setFont(font);
        edot.setText(":");

        subjectL.setFont(font);
        subjectL.setText("SUBJECT :");

        subjectT.setFont(font);

        addB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        addB.setContentAreaFilled(false);
        addB.setFocusPainted(false);
        addB.setFocusable(false);
        addB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBActionPerformed(evt);
            }
        });

        deleteB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trash.png"))); // NOI18N
        deleteB.setContentAreaFilled(false);
        deleteB.setFocusPainted(false);
        deleteB.setFocusable(false);
        deleteB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBActionPerformed(evt);
            }
        });

        warning.setFont(font);
        warning.setForeground(new java.awt.Color(255, 105, 97));
        warning.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        warning.setBorder(null);

        okB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/okB.png"))); // NOI18N
        okB.setContentAreaFilled(false);
        okB.setFocusPainted(false);
        okB.setFocusable(false);
        okB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBActionPerformed(evt);
            }
        });

        tableL.setFont(font);
        tableL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tableL.setText("TIME TABLE");

        javax.swing.GroupLayout usinTTPLayout = new javax.swing.GroupLayout(usinTTP);
        usinTTP.setLayout(usinTTPLayout);
        usinTTPLayout.setHorizontalGroup(
            usinTTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usinTTPLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(usinTTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(usinTTPLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(usinTTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tableL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(usinTTPLayout.createSequentialGroup()
                                .addComponent(dayL)
                                .addGap(59, 59, 59)
                                .addComponent(dayC, 0, 143, Short.MAX_VALUE))
                            .addGroup(usinTTPLayout.createSequentialGroup()
                                .addComponent(subjectL)
                                .addGap(35, 35, 35)
                                .addComponent(subjectT))
                            .addComponent(warning, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(usinTTPLayout.createSequentialGroup()
                                .addComponent(endTL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(endThourS, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(edot)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(endTminS, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usinTTPLayout.createSequentialGroup()
                                .addComponent(startTL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(startThourS, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sdot)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(startTminS, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(47, 47, 47))
                    .addGroup(usinTTPLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(deleteB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(okB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
        );
        usinTTPLayout.setVerticalGroup(
            usinTTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usinTTPLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(tableL)
                .addGap(35, 35, 35)
                .addGroup(usinTTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayL))
                .addGap(18, 18, 18)
                .addGroup(usinTTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startTminS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startThourS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sdot)
                    .addComponent(startTL))
                .addGap(18, 18, 18)
                .addGroup(usinTTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(usinTTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(endThourS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(edot)
                        .addComponent(endTL))
                    .addComponent(endTminS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(usinTTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectL)
                    .addComponent(subjectT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(warning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(usinTTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
            .addGroup(usinTTPLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(usinTTP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(usinTTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBActionPerformed
        // TODO add your handling code here:
        int index = TTlist.getSelectedIndex();
        if (index != -1) {
            TTModel.remove(index);
        }
    }//GEN-LAST:event_deleteBActionPerformed

    private void addBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBActionPerformed
        // TODO add your handling code here:
            warning.setText("");
            task = String.format("%-10s %02d:%02d - %02d:%02d  %s", 
                    dayC.getSelectedItem().toString(), 
                    startThourS.getValue(), 
                    startTminS.getValue(), 
                    endThourS.getValue(), 
                    endTminS.getValue(), 
                    subjectT.getText());
            
                if (validTask()) {
                    System.out.println(task);
                    TableUsin.TTModel.addElement(task);
                    createBounds(dayC.getSelectedIndex(), 
                            startThourS.getValue(), 
                            startTminS.getValue(), 
                            endThourS.getValue(), 
                            endTminS.getValue(), 
                            subjectT.getText()
                    );
                    
                }
                task = "";
    }//GEN-LAST:event_addBActionPerformed

    private void okBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBActionPerformed
        // TODO add your handling code here:  
        setVisible(false);
    }//GEN-LAST:event_okBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableUsin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableUsin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableUsin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableUsin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TableUsin().setVisible(true);
            }
        });
    }
    
    
    
    public void addTaskListener(ActionListener listener) {
        addB.addActionListener(listener);
    }
    
    public static void updateTheme() {
        usinTTP.setBackground(bgColor);
        TTlist.setBackground(bgColor);
        tableL.setBackground(bgColor);
        dayL.setBackground(bgColor);
        dayC.setBackground(bgColor);
        startTL.setBackground(bgColor);
        startThourS.setBackground(bgColor);
        sdot.setBackground(bgColor);
        startTminS.setBackground(bgColor);
        endTL.setBackground(bgColor);
        endThourS.setBackground(bgColor);
        edot.setBackground(bgColor);
        endTminS.setBackground(bgColor);
        subjectL.setBackground(bgColor);
        subjectT.setBackground(bgColor);
        warning.setBackground(bgColor);
        
        TTlist.setForeground(fgColor);
        tableL.setForeground(fgColor);
        dayL.setForeground(fgColor);
        dayC.setForeground(fgColor);
        startTL.setForeground(fgColor);
        startThourS.setForeground(fgColor);
        sdot.setForeground(fgColor);
        startTminS.setForeground(fgColor);
        endTL.setForeground(fgColor);
        endThourS.setForeground(fgColor);
        edot.setForeground(fgColor);
        endTminS.setForeground(fgColor);
        subjectL.setForeground(fgColor);
        subjectT.setForeground(fgColor);
    }
    
    public boolean validTask() {
        boolean check = true;
        if (dayC.getSelectedIndex() == 0) {
            warning.setText("!!! Select Day !!!");
            check = false;
        }
        
        if (subjectT.getText().equals("")) {
            warning.setText("!!! Add Subject !!!");
            check = false;
        }
        
        String startTime = startThourS.getValue().toString() + ":" + startTminS.getValue().toString();
        String endTime = endThourS.getValue().toString() + ":" + endTminS.getValue().toString();
        try {
            Date start = new SimpleDateFormat("HH:mm").parse(startTime);
            Date end  = new SimpleDateFormat("HH:mm").parse(endTime);
            if(end.before(start)){
                warning.setText("!!! Invalid Time !!!");
                check = false;
            }
        } catch (ParseException e) {
            System.out.println(e.getMessage());
        }
        
        return check;   
    }
    
    public void createBounds(int day, Object startHour, Object startmin, Object endHour, Object endmin, String task){
        int x = 158+(60*((int)startHour-6)+(int)startmin);
        int y = 109+(68*(day-1));
        int w = (((int)endHour-(int)startHour)*60)-(int)startmin+(int)endmin;
        TableForm.addSubject(task, x, y, w);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JList<String> TTlist;
    public static javax.swing.JButton addB;
    private static javax.swing.JComboBox<String> dayC;
    private static javax.swing.JLabel dayL;
    private javax.swing.JButton deleteB;
    private static javax.swing.JLabel edot;
    private static javax.swing.JLabel endTL;
    private static javax.swing.JSpinner endThourS;
    private static javax.swing.JSpinner endTminS;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okB;
    private static javax.swing.JLabel sdot;
    private static javax.swing.JLabel startTL;
    private static javax.swing.JSpinner startThourS;
    private static javax.swing.JSpinner startTminS;
    private static javax.swing.JLabel subjectL;
    private static javax.swing.JTextField subjectT;
    private static javax.swing.JLabel tableL;
    private static javax.swing.JPanel usinTTP;
    private static javax.swing.JTextField warning;
    // End of variables declaration//GEN-END:variables
}
