/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project_ui;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.io.IOException;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JTextField;
import javax.swing.ListModel;
import static project_ui.usinEvent.bgColor;
import static project_ui.usinEvent.fgColor;
import static project_ui.usinEvent.updateTheme;


/**
 *
 * @author faynch
 */
public class memoForm extends javax.swing.JFrame {
    static DefaultListModel eventModel = new DefaultListModel();
    static DefaultListModel todolistModel = new DefaultListModel();
    Font font;
    static Color bgColor;
    static Color fgColor;
    public time objTime = new time();

    /**
     * Creates new form memoForm
     */
    public memoForm() {
        
        try {
            font = Font.createFont(Font.TRUETYPE_FONT, new File("Chewy-Regular.ttf")).deriveFont(30f);
            GraphicsEnvironment g = GraphicsEnvironment.getLocalGraphicsEnvironment();
            g.registerFont(Font.createFont(Font.TRUETYPE_FONT, new File("Chewy-Regular.ttf")));
        }
        catch(IOException | FontFormatException e){
            
        }
        
        initComponents();
        
        dateL.setFont(font.deriveFont(40f));
        dateL.setText(objTime.getFormattedDate()); //Set The Current Time
        
        updateTheme();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        moodButtonGroup = new javax.swing.ButtonGroup();
        memoP = new javax.swing.JPanel();
        todolistP = new javax.swing.JPanel();
        todolistL = new javax.swing.JLabel();
        delForListB = new javax.swing.JButton();
        addForListB = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        todolistT = new javax.swing.JList<>();
        backB = new javax.swing.JButton();
        dateP = new javax.swing.JPanel();
        leftB = new javax.swing.JButton();
        rightB = new javax.swing.JButton();
        dateL = new javax.swing.JLabel();
        eventP = new javax.swing.JPanel();
        eventL = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        eventT = new javax.swing.JList<>();
        delForEventB = new javax.swing.JButton();
        addForEventB = new javax.swing.JButton();
        moodP = new javax.swing.JPanel();
        orangeB = new javax.swing.JToggleButton();
        redB = new javax.swing.JToggleButton();
        moodL = new javax.swing.JLabel();
        blueB = new javax.swing.JToggleButton();
        yellowB = new javax.swing.JToggleButton();
        purpleB = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1100, 700));
        setMinimumSize(new java.awt.Dimension(1100, 700));
        setResizable(false);

        memoP.setBackground(new java.awt.Color(255, 255, 255));
        memoP.setMaximumSize(new java.awt.Dimension(1100, 700));
        memoP.setMinimumSize(new java.awt.Dimension(1100, 700));
        memoP.setPreferredSize(new java.awt.Dimension(1100, 700));

        todolistP.setBackground(new java.awt.Color(255, 255, 255));
        todolistP.setPreferredSize(new java.awt.Dimension(500, 500));

        todolistL.setFont(font);
        todolistL.setText("TO DO LIST");

        delForListB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trash.png"))); // NOI18N
        delForListB.setBorder(null);
        delForListB.setBorderPainted(false);
        delForListB.setContentAreaFilled(false);
        delForListB.setFocusable(false);

        addForListB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        addForListB.setBorder(null);
        addForListB.setBorderPainted(false);
        addForListB.setContentAreaFilled(false);
        addForListB.setFocusable(false);
        addForListB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addForListBActionPerformed(evt);
            }
        });

        todolistT.setFont(font);
        todolistT.setModel(todolistModel);
        todolistT.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(todolistT);

        backB.setBackground(new java.awt.Color(255, 255, 255));
        backB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backB.png"))); // NOI18N
        backB.setBorder(null);
        backB.setBorderPainted(false);
        backB.setContentAreaFilled(false);
        backB.setFocusable(false);
        backB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout todolistPLayout = new javax.swing.GroupLayout(todolistP);
        todolistP.setLayout(todolistPLayout);
        todolistPLayout.setHorizontalGroup(
            todolistPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(todolistPLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(todolistPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(delForListB, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addForListB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(todolistPLayout.createSequentialGroup()
                .addGroup(todolistPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backB, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(todolistPLayout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(todolistL)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        todolistPLayout.setVerticalGroup(
            todolistPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(todolistPLayout.createSequentialGroup()
                .addComponent(backB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(todolistL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(todolistPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addForListB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delForListB, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dateP.setBackground(new java.awt.Color(255, 255, 255));

        leftB.setBackground(new java.awt.Color(255, 255, 255));
        leftB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/leftB.png"))); // NOI18N
        leftB.setBorderPainted(false);
        leftB.setContentAreaFilled(false);
        leftB.setFocusable(false);
        leftB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftBActionPerformed(evt);
            }
        });

        rightB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rightB.png"))); // NOI18N
        rightB.setBorderPainted(false);
        rightB.setContentAreaFilled(false);
        rightB.setFocusable(false);
        rightB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightBActionPerformed(evt);
            }
        });

        dateL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateL.setText("MON 23 OCT");
        dateL.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, null, java.awt.Color.gray));
        dateL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout datePLayout = new javax.swing.GroupLayout(dateP);
        dateP.setLayout(datePLayout);
        datePLayout.setHorizontalGroup(
            datePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datePLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(leftB, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dateL, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rightB, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        datePLayout.setVerticalGroup(
            datePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datePLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rightB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(leftB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        eventP.setBackground(new java.awt.Color(255, 255, 255));

        eventL.setFont(font);
        eventL.setText("EVENT");

        eventT.setFont(font);
        eventT.setModel(eventModel);
        eventT.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(eventT);

        delForEventB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trash.png"))); // NOI18N
        delForEventB.setBorder(null);
        delForEventB.setBorderPainted(false);
        delForEventB.setContentAreaFilled(false);
        delForEventB.setFocusable(false);
        delForEventB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delForEventBActionPerformed(evt);
            }
        });

        addForEventB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        addForEventB.setBorder(null);
        addForEventB.setBorderPainted(false);
        addForEventB.setContentAreaFilled(false);
        addForEventB.setFocusable(false);
        addForEventB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addForEventBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout eventPLayout = new javax.swing.GroupLayout(eventP);
        eventP.setLayout(eventPLayout);
        eventPLayout.setHorizontalGroup(
            eventPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(eventPLayout.createSequentialGroup()
                .addGroup(eventPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, eventPLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(delForEventB, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addForEventB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(eventPLayout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(eventL)
                        .addGap(0, 186, Short.MAX_VALUE)))
                .addContainerGap())
        );
        eventPLayout.setVerticalGroup(
            eventPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eventPLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(eventPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(delForEventB, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(eventPLayout.createSequentialGroup()
                        .addComponent(eventL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addForEventB, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        moodP.setBackground(new java.awt.Color(255, 255, 255));

        moodButtonGroup.add(orangeB);
        orangeB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/orange.png"))); // NOI18N
        orangeB.setBorderPainted(false);
        orangeB.setContentAreaFilled(false);
        orangeB.setFocusable(false);

        moodButtonGroup.add(redB);
        redB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/red.png"))); // NOI18N
        redB.setToolTipText("");
        redB.setBorder(null);
        redB.setBorderPainted(false);
        redB.setContentAreaFilled(false);
        redB.setFocusable(false);
        redB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                redBMouseClicked(evt);
            }
        });

        moodL.setBackground(new java.awt.Color(255, 255, 255));
        moodL.setFont(font);
        moodL.setText("MOOD");

        moodButtonGroup.add(blueB);
        blueB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bule.png"))); // NOI18N
        blueB.setBorderPainted(false);
        blueB.setContentAreaFilled(false);
        blueB.setFocusable(false);

        moodButtonGroup.add(yellowB);
        yellowB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/yellow.png"))); // NOI18N
        yellowB.setBorderPainted(false);
        yellowB.setContentAreaFilled(false);
        yellowB.setFocusable(false);

        moodButtonGroup.add(purpleB);
        purpleB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/purple.png"))); // NOI18N
        purpleB.setBorderPainted(false);
        purpleB.setContentAreaFilled(false);
        purpleB.setFocusable(false);

        javax.swing.GroupLayout moodPLayout = new javax.swing.GroupLayout(moodP);
        moodP.setLayout(moodPLayout);
        moodPLayout.setHorizontalGroup(
            moodPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(moodPLayout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addComponent(moodL)
                .addGap(31, 31, 31)
                .addComponent(redB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(orangeB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(yellowB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(purpleB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(blueB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        moodPLayout.setVerticalGroup(
            moodPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(moodPLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(moodPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(moodL)
                    .addComponent(purpleB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blueB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yellowB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orangeB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(redB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout memoPLayout = new javax.swing.GroupLayout(memoP);
        memoP.setLayout(memoPLayout);
        memoPLayout.setHorizontalGroup(
            memoPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(memoPLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(todolistP, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(memoPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moodP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        memoPLayout.setVerticalGroup(
            memoPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(memoPLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(memoPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(todolistP, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
                    .addGroup(memoPLayout.createSequentialGroup()
                        .addComponent(dateP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eventP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(moodP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(memoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(memoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Time Feature
    //Button for going to the previous day
    private void leftBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftBActionPerformed
        // TODO add your handling code here:
        dateL.setText(objTime.decreaseTime());
        System.out.println("the previous day");
    }//GEN-LAST:event_leftBActionPerformed

    //Button for going to the next day
    private void rightBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightBActionPerformed
        // TODO add your handling code here:
        dateL.setText(objTime.increaseTime());
        System.out.println("the next day");
    }//GEN-LAST:event_rightBActionPerformed

    private void delForEventBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delForEventBActionPerformed
        // TODO add your handling code here:
        int index = eventT.getSelectedIndex();
        if (index != -1) {
            eventModel.remove(index);
        }
    }//GEN-LAST:event_delForEventBActionPerformed

    private void addForEventBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addForEventBActionPerformed
        // TODO add your handling code here:
        new usinEvent().setVisible(true);
        usinEvent.bgColor = bgColor;
        usinEvent.fgColor = fgColor;
        usinEvent.updateTheme();
    }//GEN-LAST:event_addForEventBActionPerformed

    private void addForListBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addForListBActionPerformed
        // TODO add your handling code here:
        JCheckBox check = new JCheckBox();
        JTextField list = new JTextField();
        
    }//GEN-LAST:event_addForListBActionPerformed

    private void redBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_redBMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_redBMouseClicked

    private void backBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new mainWindow().setVisible(true);
        mainWindow.bgColor = bgColor;
        mainWindow.fgColor = fgColor;
        mainWindow.updateTheme();
    }//GEN-LAST:event_backBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(memoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(memoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(memoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(memoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new memoForm().setVisible(true);
            }
        });
    }
    
    public static void updateTheme() {
        memoP.setBackground(bgColor);
        todolistP.setBackground(bgColor);
        todolistT.setBackground(bgColor);
        dateP.setBackground(bgColor);
        dateL.setBackground(bgColor);
        eventP.setBackground(bgColor);
        eventL.setBackground(bgColor);
        eventT.setBackground(bgColor);
        moodP.setBackground(bgColor);
        moodL.setBackground(bgColor);
       
        
        todolistL.setForeground(fgColor);
        todolistT.setForeground(fgColor);
        dateL.setForeground(fgColor);
        eventL.setForeground(fgColor);
        eventT.setForeground(fgColor);
        moodL.setForeground(fgColor);
        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton addForEventB;
    private static javax.swing.JButton addForListB;
    private javax.swing.JButton backB;
    private static javax.swing.JToggleButton blueB;
    private static javax.swing.JLabel dateL;
    private static javax.swing.JPanel dateP;
    private static javax.swing.JButton delForEventB;
    private static javax.swing.JButton delForListB;
    private static javax.swing.JLabel eventL;
    private static javax.swing.JPanel eventP;
    private static javax.swing.JList<String> eventT;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private static javax.swing.JButton leftB;
    private static javax.swing.JPanel memoP;
    private javax.swing.ButtonGroup moodButtonGroup;
    private static javax.swing.JLabel moodL;
    private static javax.swing.JPanel moodP;
    private static javax.swing.JToggleButton orangeB;
    private static javax.swing.JToggleButton purpleB;
    private static javax.swing.JToggleButton redB;
    private static javax.swing.JButton rightB;
    private static javax.swing.JLabel todolistL;
    private static javax.swing.JPanel todolistP;
    private static javax.swing.JList<String> todolistT;
    private static javax.swing.JToggleButton yellowB;
    // End of variables declaration//GEN-END:variables
}
