/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project_ui;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author faynch
 */
public class EventUsin extends javax.swing.JFrame {
    Font font;
    static Color bgColor;
    static Color fgColor;
    String task = "";
    
    /**
     * Creates new form usinEvent
     */
    public EventUsin() {
        
        try {
            font = Font.createFont(Font.TRUETYPE_FONT, new File("Chewy-Regular.ttf")).deriveFont(20f);
            GraphicsEnvironment g = GraphicsEnvironment.getLocalGraphicsEnvironment();
            g.registerFont(Font.createFont(Font.TRUETYPE_FONT, new File("Chewy-Regular.ttf")));
        }
        catch(IOException | FontFormatException e){
            
        }
        
        initComponents();
        
        eventL.setFont(font.deriveFont(30f));
        warning.setFont(font.deriveFont(20f));
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usinEventP = new javax.swing.JPanel();
        okB = new javax.swing.JButton();
        eventL = new javax.swing.JLabel();
        taskL = new javax.swing.JLabel();
        taskE = new javax.swing.JTextField();
        warning = new javax.swing.JTextField();
        hrL = new javax.swing.JLabel();
        hrS = new javax.swing.JSpinner();
        minS = new javax.swing.JSpinner();
        minL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        usinEventP.setBackground(new java.awt.Color(255, 255, 255));

        okB.setFont(font);
        okB.setText("OK");
        okB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBActionPerformed(evt);
            }
        });

        eventL.setFont(font);
        eventL.setText("EVENT");

        taskL.setFont(font);
        taskL.setText("Task");

        taskE.setFont(font);

        warning.setFont(font);
        warning.setBorder(null);

        hrL.setFont(font);
        hrL.setText("Time        Hr :");

        hrS.setFont(font);
        hrS.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        hrS.setMaximumSize(new java.awt.Dimension(50, 30));
        hrS.setMinimumSize(new java.awt.Dimension(50, 30));
        hrS.setPreferredSize(new java.awt.Dimension(50, 30));
        hrS.setSize(new java.awt.Dimension(50, 30));

        minS.setFont(font);
        minS.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        minS.setMaximumSize(new java.awt.Dimension(50, 30));
        minS.setMinimumSize(new java.awt.Dimension(50, 30));
        minS.setPreferredSize(new java.awt.Dimension(50, 30));
        minS.setSize(new java.awt.Dimension(50, 30));

        minL.setFont(font);
        minL.setText("Min :");

        javax.swing.GroupLayout usinEventPLayout = new javax.swing.GroupLayout(usinEventP);
        usinEventP.setLayout(usinEventPLayout);
        usinEventPLayout.setHorizontalGroup(
            usinEventPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usinEventPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(usinEventPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(warning, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usinEventPLayout.createSequentialGroup()
                        .addGap(0, 41, Short.MAX_VALUE)
                        .addGroup(usinEventPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(okB)
                            .addGroup(usinEventPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(usinEventPLayout.createSequentialGroup()
                                    .addGap(122, 122, 122)
                                    .addComponent(eventL))
                                .addComponent(taskL)
                                .addGroup(usinEventPLayout.createSequentialGroup()
                                    .addComponent(hrL, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(hrS, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(50, 50, 50)
                                    .addComponent(minL)
                                    .addGap(18, 18, 18)
                                    .addComponent(minS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(taskE, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(49, 49, 49))))
        );
        usinEventPLayout.setVerticalGroup(
            usinEventPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usinEventPLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(eventL)
                .addGap(20, 20, 20)
                .addGroup(usinEventPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hrL)
                    .addComponent(hrS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minL))
                .addGap(36, 36, 36)
                .addComponent(taskL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(taskE, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(okB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warning, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(usinEventP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(usinEventP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBActionPerformed
        // TODO add your handling code here:
        warning.setText("");
        String tempTask = formatDetail(taskE.getText());
        task = String.format("%s%s", tempTask, formatTime(MainWindow.paanModel.getTimeFormat(), (int)hrS.getValue(), (int)minS.getValue()));
        System.out.println(task);
        String tempTime = String.format("%02d:%02d", (int)hrS.getValue(), (int)minS.getValue());
        if (validEvent()) {
            MemoForm.eventModel.addElement(task);
            MainWindow.getPaanModel().addEventTask(taskE.getText(), tempTime);
        }
        task = "";
    }//GEN-LAST:event_okBActionPerformed

    public static String formatDetail(String detail) {
        String shift = " ";
        String specialChar = " .ijls";
        int space;
        int check = 0;
        
        
        if (detail.length() > 20) {
            detail = detail.substring(0,18) + "...";
        }
       
        for (int i = 0; i < detail.length(); i++) {
            if (specialChar.contains(Character.toString(detail.charAt(i)))) {check++;}
        }
        check--;
        
        space = 50-(((detail.length()-check)*2)+check);
        detail = detail + shift.repeat(space); 
        
        return detail;
    }
    
    public static String formatTime(int type,int hr, int min){
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
            Date temp = sdf.parse(hr+":"+min);
            if(type == 0) sdf = new SimpleDateFormat("HH:mm");
            else sdf = new SimpleDateFormat("hh:mm a");
            return sdf.format(temp) ;
        } catch (ParseException e) {
            System.out.println(e.getMessage());
        }
        return "";
    }
        
    public static boolean validEvent() {
        boolean check = true;
        if (taskE.getText().equals("")) {
            warning.setText("!!! Add Event !!!");
            check = false;
        }
        return check;   
    }

    public static void updateTheme() {
        usinEventP.setBackground(bgColor);
        okB.setBackground(bgColor);
        warning.setBackground(bgColor);
        
        eventL.setForeground(fgColor);
        hrL.setForeground(fgColor);
        minL.setForeground(fgColor);
        taskL.setForeground(fgColor);
        okB.setForeground(fgColor);
        warning.setForeground(fgColor);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JLabel eventL;
    private static javax.swing.JLabel hrL;
    private static javax.swing.JSpinner hrS;
    private static javax.swing.JLabel minL;
    private static javax.swing.JSpinner minS;
    private static javax.swing.JButton okB;
    private static javax.swing.JTextField taskE;
    private static javax.swing.JLabel taskL;
    private static javax.swing.JPanel usinEventP;
    private static javax.swing.JTextField warning;
    // End of variables declaration//GEN-END:variables
}
